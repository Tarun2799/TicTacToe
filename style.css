@import url('https://fonts.googleapis.com/css2?family=Anta&display=swap');

*, *::after, *::before{
    box-sizing: border-box;
}

*{
    font-family: "Anta", sans-serif;
    font-weight: 400;
    font-style: normal;
}
:root{
    --cell-size: 100px;
    --mark-size: calc(var(--cell-size) * (.9));
}

body{
    margin: 0;
    background-color: rgba(201, 86, 195, 0.14);
}
nav{
    padding: 2rem 5rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    
}
nav>button{
    padding: 0.3rem 0.5rem;
    /* margin-right: 2rem; */
    font-size: 1.5rem;
    background-color: #000;
    color: #fff;
    border-radius: 7px;
}

nav>button:hover{
    background-color: #fff;
    color: #000;
}
/* .heading{
    margin-left: 5rem;
    margin-right: 5rem;
} */

.board{
    width: 100vw;
    height: 82svh;
    display: grid;
    /* these both content values center the .cell  */
    justify-content: center; 
    align-content: center;
    /* these both items values center the .cell inside, this is going to align actual individual content things inside our cells, not the actual cell themselves.  */
    justify-items: center;
    align-items:  center;
    grid-template-columns: repeat(3, auto);
}

.cell{
    width: var(--cell-size);
    height: var(--cell-size);
    /* background-color: #000; */
    border: 1px solid #000;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    cursor: pointer;
}

.cell:first-child,
.cell:nth-child(2),
.cell:nth-child(3){
    border-top: none;
}

/* for left side */
.cell:nth-child(3n + 1){
    border-left: none;
}

/* for right side */
.cell:nth-child(3n + 3){
    border-right: none;
}

.cell:last-child,
.cell:nth-child(7),
.cell:nth-child(8){
    border-bottom: none;
}

/* If cell has X or Circle class then we add CURSOR not-allowed */
.cell.x,
.cell.circle{
    cursor: not-allowed;
}


/* We are adding the hover effect. In order to determine whose turn it is, we are going to apply a class to the board (x or circle) . Let's just start with an x: put this into board class div. So every time i hover the empty element/cell it should show me the (x/circle) respectively. so in order to that we need to add hover efffect to the cells. So, we have select our board when it has the x class and we want get the cells inside of that board and whenever we hover them we want to do something. We would do the same thing as we did in order to crate that X shape but just with with different color. we added this CSS to already declared css. So now, Whwnever we hover over acell when it's x's turn, we are going to apply this class to it*/

/* It's going to do this over all of them but, we want to work the HOVER effect on the EMPTY cell. ESSENTIALLY, THAT CELL THAT DOESN'T HAVE THE X OR CIRCLE. This is where we use not selector , :not(x):not(circle)*/


/* Let's change the background color of x*/

.cell.x::before,
.cell.x::after,
.cell.circle::before{
    background-color: #000;
}


.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after,
.board.circle .cell:not(.x):not(.circle):hover::before{
    background-color: lightgray;
}


/* If we directly write X in the div, this X depending on what font you use, and in ehich browser then we have to worry about font sizes, different browsers compatiblity . So, we just use simple CSS create the X shape for us. And we use the pseudo elements*/

/* For this , i will add x class for X in different cell. And we add the content to EMPTY STRING, that way this before and after elements render, let's set width and height for that, we are going to  CALCULATE*/
/* 1. */
.cell.x::before,
.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::before,
.board.x .cell:not(.x):not(.circle):hover::after{
    content: '';
    position: absolute;
    width: calc(var(--mark-size) * .15);
    height: var(--mark-size);
}
/* After we hit save nothing is happening yet  and main reason for this is that our cell is not actually displaying the content inside of it. Add in the .cell : display: flex, justify-content and alignitems to center. RN we are two l's in thr cell but we have to render X, let's transform 45 deg, before element and to after element element as well but oppposite direction*/


/* here also, we are going to add hover effect CSS */
.cell.x::before,
.board.x .cell:not(.x):not(.circle):hover::before{
    transform: rotate(45deg);
}

/* here also, we are going to add hover effect CSS */
.cell.x::after,
.board.x .cell:not(.x):not(.circle):hover::after{
    transform: rotate(-45deg);
}

/* but they are not looking verygood, to fix this is easy let's do that. REASON IS: because they displayed next to each other on the document FLOW in POSITION STATIC, we aare going the change them to position absolute , by this they have the EXACT SAME BASE WHICH IS GOING TO BE PARENT(cell) and they won't overlap on tpof each other. Going to number 1. and adding position absolute and in the .cell : pos: relative, so that they won't go out of the cell*/






/* We are going to do the similar thing for circle as well And also the hover effect as well*/

.cell.circle::before,
.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::before,
.board.circle .cell:not(.x):not(.circle):hover::after{
    content: '';
    position: absolute;
    border-radius: 50%;
}

/* After doing this we get a square. Now, we just have to separate them two circles */

.cell.circle::before,
.board.circle .cell:not(.x):not(.circle):hover::before
{
    width: var(--mark-size);
    height: var(--mark-size);
    /* background-color: #000 ; */
}

.cell.circle::after,
.board.circle .cell:not(.x):not(.circle):hover::after
{
    width: calc(var(--mark-size)* (.7));
    height: calc(var(--mark-size)* (.7));
    background-color: #fff;
}



.winning-message{
    /* by default we keep it's display none and separate the flex in other selector category */
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, .9);
    /* display: flex; */
    justify-content: center;
    align-items: center;
    color: #fff;
    font-size: 5rem;
    flex-direction: column;
}

.winning-message button{
    font-size: 3rem;
    background-color: #fff;
    border: 1px soild black;
    padding: .25em .5em;
    cursor: pointer;
}

.winning-message button:hover{
    background-color: black;
    border-color: white;
    color: #fff;
}

.winning-message.show{
    display: flex;
}



@media ( max-width: 400px ){
    body{
        min-width: 400px;
        display: grid;
        grid-template-columns: auto;
        
    }
    nav{
        min-width: 400px;
        justify-content: space-evenly;
    }

    .board{
        min-width: 400px;
        min-height: 500px;
    }
}